{
  "permissions": {
    "allow": [
      "Bash(bun check-types:*)",
      "Bash(bun test:*)",
      "Bash(bun --filter mobile test:run)",
      "Bash(find:*)",
      "mcp__supabase__get_project_url",
      "mcp__supabase__search_docs",
      "mcp__supabase__get_anon_key",
      "Bash(bun add:*)",
      "WebFetch(domain:supabase.com)",
      "mcp__supabase__list_tables",
      "mcp__supabase__execute_sql",
      "Bash(bun lint:*)",
      "Bash(bun lint:*)",
      "Bash(npm run dev:*)",
      "Bash(bun dev:*)",
      "Bash(mkdir:*)",
      "Bash(git remote get-url:*)",
      "mcp__github__create_issue",
      "Bash(gh issue create:*)",
      "Bash(grep:*)",
      "Bash(bun format:*)",
      "Bash(npx biome format:*)",
      "Bash(npx biome check:*)",
      "Bash(bun --filter=mobile test:run)",
      "Bash(bun mobile lint:*)",
      "Bash(bun mobile:*)",
      "Bash(rg:*)",
      "Bash(npm run lint)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_install",
      "mcp__github__get_me",
      "Bash(gh auth:*)",
      "Bash(bun check:*)",
      "mcp__ide__getDiagnostics",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(npm uninstall:*)",
      "Bash(bun exec:*)",
      "Bash(bun install:*)",
      "Bash(bun run lint:*)",
      "Bash(afplay:*)",
      "Bash(bun build)",
      "Bash(bun run:*)",
      "Bash(node:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(bun run:*)",
      "Bash(openssl rand:*)",
      "Bash(chmod:*)",
      "Bash(bun convex env set:*)",
      "Bash(bun convex env:*)",
      "Bash(npm install:*)",
      "Bash(npx convex dev:*)",
      "Bash(npm run lint:*)",
      "Bash(curl:*)",
      "Bash(ollama list:*)",
      "Bash(ollama pull:*)",
      "WebFetch(domain:docs.convex.dev)",
      "Bash(mise use:*)",
      "Bash(mise exec:*)",
      "Bash(pkill:*)",
      "Bash(npx tsc:*)",
      "Bash(git push:*)",
      "Bash(bun tc:*)",
      "Bash(bun biome check:*)",
      "Bash(timeout 30 bun dev)",
      "Bash(npm run build:*)",
      "Bash(npm run typecheck:*)",
      "Bash(bun info:*)",
      "Bash(npx:*)",
      "Bash(bun typecheck:*)",
      "Bash(bun biome format:*)",
      "WebFetch(domain:ai.google.dev)",
      "Bash(bun add:*)",
      "Bash(bun test:*)",
      "Bash(mv:*)",
      "Bash(bun check:*)"
    ],
    "deny": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/use-bun.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/format.sh"
          }
        ]
      },
      {
        "matcher": "Write|Edit",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path' | grep -E '\\.(test|spec)\\.(js|ts)$' | xargs -r npm test -- --findRelatedTests"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Claude Code: $(jq -r '.message')\" | terminal-notifier -title 'Claude Code'"
          }
        ]
      }
    ]
  }
}
